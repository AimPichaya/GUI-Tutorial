#Imports
import tkinter as tk
from tkinter import ttk
from tkinter import scrolledtext

def basic_1():
    #Create instance
    win = tk.Tk()

    #Add a title
    win.title("python GUI")

    #Adding a Label
    ttk.Label(win, text="A Label").grid(column=0, row=0)
    #==== Start GUI ====
    win.mainloop()

def basic_2():
    # Create instance
    win = tk.Tk()

    # Add a title
    win.title("python GUI")
    win.option_add("*Font","consolar 20")
    #Adding a Label that will get modified
    a_label = ttk.Label(win, text="Pleas Click")
    a_label.grid(column=0, row=0)
    #Button Click Event Function
    def click_me():
        action.configure(text="THE PROJECT")
        a_label.configure(foreground='red')
        a_label.configure(text="You'll get through")

    #Adding a Button
    action = ttk.Button(win, text="Next page",command=click_me)
    action.grid(column=1,row=0)
    win.mainloop()

def basic_3():
    # Create instance
    win = tk.Tk()

    # Add a title
    win.title("python GUI")
    win.option_add("*Font", "consolar 16")
    # Adding a Label that will get modified
    a_label = ttk.Label(win, text="Pleas Click")
    a_label.grid(column=0, row=0)

    def click_me():
        action.configure(text="Hello "+ name.get())

    # Changing our Label
    ttk.Label(win, text="Enter your name:").grid(column=0, row=0)

    # Adding a Textbox Entry widget
    name = tk.StringVar()
    name_entered = ttk.Entry(win, width=12, text=name)
    name_entered.grid(column=0, row=1)

    # Adding a Button
    action = ttk.Button(win, text="Hello",command=click_me)
    action.grid(column=0, row=2)

    win.mainloop()

def basic_4():
    #Setting the focus to a widget and disabling widgets
    # Create instance
    win = tk.Tk()

    # Add a title
    win.title("python GUI")
    win.option_add("*Font", "consolar 20")

    # Adding a Label that will get modified
    a_label = ttk.Label(win, text="Pleas Click")
    a_label.grid(column=0, row=0)

    def click_me():
        action.configure(text="Hello" + name.get())

    # Changing our Label
    ttk.Label(win, text="Enter your name:").grid(column=0, row=0)

    # Adding a Textbox Entry widget
    name = tk.StringVar()
    name_entered = ttk.Entry(win, width=12, text=name)
    name_entered.grid(column=0, row=1)

    # Adding a Button
    action = ttk.Button(win, text="Click me!", command=click_me)
    action.grid(column=1, row=1)
    action.configure(state='disabled') #Disable the button Widget

    name_entered.focus()    #Place cursor into name Entry

    win.mainloop()

def basic_5():
    # Combo box widgets
    # Create instance
    win = tk.Tk()

    # Add a title
    win.title("python GUI")
    win.option_add("*Font", "consolar 15")

    # Adding a Label that will get modified
    a_label = ttk.Label(win, text="Pleas Click")
    a_label.grid(column=0, row=0)

    def click_me():
        action.configure(text="Hello" + name.get())

    # Changing our Label
    ttk.Label(win, text="Enter a name:").grid(column=0, row=0)

    # Adding a Textbox Entry widget
    name = tk.StringVar()
    name_entered = ttk.Entry(win, width=12, text=name)
    name_entered.grid(column=0, row=1)

    # Adding a Button
    action = ttk.Button(win, text="Click me!", command=click_me)
    action.grid(column=2, row=1)

    ttk.Label(win, text="Choose a number:").grid(column=1, row=0)
    number = tk.StringVar()
    number_chosen = ttk.Combobox(win, width=12 , text=number)
    number_chosen['values'] = (1,2,3,4,5)
    number_chosen.grid(column=1, row=1)
    number_chosen.current(0)

    name_entered.focus()  # Place cursor into name Entry

    win.mainloop()

def basic_6():
    # Combo box widgets
    # Create instance
    win = tk.Tk()

    # Add a title
    win.title("python GUI")
    win.option_add("*Font", "consolar 15")

    # Adding a Label that will get modified
    a_label = ttk.Label(win, text="Pleas Click")
    a_label.grid(column=1, row=0)

    def click_me():
        action.configure(text="Hello" + name.get())

    # Changing our Label
    ttk.Label(win, text="Enter a name:").grid(column=0, row=0)

    # Adding a Textbox Entry widget
    name = tk.StringVar()
    name_entered = ttk.Entry(win, width=12, text=name)
    name_entered.grid(column=0, row=1)

    # Adding a Button
    action = ttk.Button(win, text="Click me!", command=click_me)
    action.grid(column=2, row=1)

    #Creating three checkbuttons
    ttk.Label(win, text="Choose a number:").grid(column=1, row=0)
    number = tk.StringVar()
    number_chosen = ttk.Combobox(win, width=12, text=number, state="readonly")
    number_chosen['values'] = (1, 2, 3, 4, 5)
    number_chosen.grid(column=1, row=1)
    number_chosen.current(0)

    chVarDis = tk.IntVar()
    check_1 = tk.Checkbutton(win, text="Disabled", state="disabled")
    check_1.select()
    check_1.grid(column=0 , row=4,sticky=tk.W)

    chVarUn = tk.IntVar()
    check_2 = tk.Checkbutton(win, text="UnChecked")
    check_2.deselect()
    check_2.grid(column=1, row=4, sticky=tk.W)

    chVarEn = tk.IntVar()
    check_3 = tk.Checkbutton(win, text="Enabled")
    check_3.deselect()
    check_3.grid(column=2, row=4, sticky=tk.W)

    name_entered.focus()  # Place cursor into name Entry

    win.mainloop()

def basic_7():
    #Using radio button widgets
    win = tk.Tk()

    # Add a title
    win.title("python GUI")
    win.option_add("*Font", "consolar 15")

    # Adding a Label that will get modified
    a_label = ttk.Label(win, text="Pleas Click")
    a_label.grid(column=1, row=0)

    def click_me():
        action.configure(text="Hello" + name.get())

    # Changing our Label
    ttk.Label(win, text="Enter a name:").grid(column=0, row=0)

    # Adding a Textbox Entry widget
    name = tk.StringVar()
    name_entered = ttk.Entry(win, width=12, text=name)
    name_entered.grid(column=0, row=1)

    # Adding a Button
    action = ttk.Button(win, text="Click me!", command=click_me)
    action.grid(column=2, row=1)

    #Creating three checkbuttons
    ttk.Label(win, text="Choose a number:").grid(column=1, row=0)
    number = tk.StringVar()
    number_chosen = ttk.Combobox(win, width=12, text=number, state="readonly")
    number_chosen['values'] = (1, 2, 3, 4, 5)
    number_chosen.grid(column=1, row=1)
    number_chosen.current(0)

    chVarDis = tk.IntVar()
    check_1 = tk.Checkbutton(win, text="Disabled", state="disabled")
    check_1.select()
    check_1.grid(column=0 , row=4,sticky=tk.W)

    chVarUn = tk.IntVar()
    check_2 = tk.Checkbutton(win, text="UnChecked")
    check_2.deselect()
    check_2.grid(column=1, row=4, sticky=tk.W)

    chVarEn = tk.IntVar()
    check_3 = tk.Checkbutton(win, text="Enabled")
    check_3.deselect()
    check_3.grid(column=2, row=4, sticky=tk.W)

    name_entered.focus()  # Place cursor into name Entry

    #Redioutton Callback
    def radCall():
        radSel = radVar.get()
        if redSel == 1: win.configure(background= 'Blue')
        elif redSel == 2: win.configure(background= 'Gold')
        elif redSel == 3: win.configure(background= 'Red')

    #Create three Radiobuttons using one variable
    radVar = tk.IntVar()

    rad1 = tk.Radiobutton(win, text = 'Blue' ,variable =radVar , value =1 ,command = radCall)
    rad1.grid(column=0, row=5 ,stick = tk.W ,columnspan=3)

    rad2 = tk.Radiobutton(win, text = 'Gold' ,variable =radVar , value =2 ,command = radCall)
    rad2.grid(column=1, row=5 ,stick = tk.W ,columnspan=3)

    rad3 = tk.Radiobutton(win, text = 'Red' ,variable =radVar , value =3 ,command = radCall)
    rad3.grid(column=2, row=5 ,stick = tk.W ,columnspan=3)

    name_entered.focus()

    win.mainloop()

def basic_8():
    # Using radio button widgets
    win = tk.Tk()

    # Add a title
    win.title("python GUI")
    win.option_add("*Font", "consolar 15")

    # Adding a Label that will get modified
    a_label = ttk.Label(win, text="Pleas Click")
    a_label.grid(column=1, row=0)

    def click_me():
        action.configure(text="Hello" + name.get())

    # Changing our Label
    ttk.Label(win, text="Enter a name:").grid(column=0, row=0)

    # Adding a Textbox Entry widget
    name = tk.StringVar()
    name_entered = ttk.Entry(win, width=12, text=name)
    name_entered.grid(column=0, row=1)

    # Adding a Button
    action = ttk.Button(win, text="Click me!", command=click_me)
    action.grid(column=2, row=1)

    # Creating three checkbuttons
    ttk.Label(win, text="Choose a number:").grid(column=1, row=0)
    number = tk.StringVar()
    number_chosen = ttk.Combobox(win, width=12, text=number, state="readonly")
    number_chosen['values'] = (1, 2, 3, 4, 5)
    number_chosen.grid(column=1, row=1)
    number_chosen.current(0)

    chVarDis = tk.IntVar()
    check_1 = tk.Checkbutton(win, text="Disabled", state="disabled")
    check_1.select()
    check_1.grid(column=0, row=4, sticky=tk.W)

    chVarUn = tk.IntVar()
    check_2 = tk.Checkbutton(win, text="UnChecked")
    check_2.deselect()
    check_2.grid(column=1, row=4, sticky=tk.W)

    chVarEn = tk.IntVar()
    check_3 = tk.Checkbutton(win, text="Enabled")
    check_3.deselect()
    check_3.grid(column=2, row=4, sticky=tk.W)

    name_entered.focus()  # Place cursor into name Entry

    # Redioutton Callback
    def radCall():
        radSel = radVar.get()
        if redSel == 1:
            win.configure(background='Blue')
        elif redSel == 2:
            win.configure(background='Gold')
        elif redSel == 3:
            win.configure(background='Red')

    # Create three Radiobuttons using one variable
    radVar = tk.IntVar()

    rad1 = tk.Radiobutton(win, text='Blue', variable=radVar, value=1, command=radCall)
    rad1.grid(column=0, row=5, stick=tk.W, columnspan=3)

    rad2 = tk.Radiobutton(win, text='Gold', variable=radVar, value=2, command=radCall)
    rad2.grid(column=1, row=5, stick=tk.W, columnspan=3)

    rad3 = tk.Radiobutton(win, text='Red', variable=radVar, value=3, command=radCall)
    rad3.grid(column=2, row=5, stick=tk.W, columnspan=3)

    #Usinga scrolled Text control
    scrol_w = 30
    scrol_h = 3
    scr = scrolledtext.ScrolledText(win, width=scrol_w,height=scrol_h,wrap=tk.WORD)
    scr.grid(column=0,columnspan=3)

    name_entered.focus()

    win.mainloop()

if __name__ == '__main__':
    basic_8()
